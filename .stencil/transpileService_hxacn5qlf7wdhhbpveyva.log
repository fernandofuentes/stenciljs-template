{"moduleFile":{"sourceFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/in-page-navigation/in-page-navigation.tsx","jsFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/in-page-navigation/in-page-navigation.js","cmps":[{"isLegacy":false,"tagName":"in-page-navigation","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"InPageNavigtion","elementRef":null,"encapsulation":"none","properties":[{"name":"pageLinks","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"[]","complexType":{"original":"MarkdownHeading[]","resolved":"MarkdownHeading[]","references":{"MarkdownHeading":{"location":"import","path":"../../global/definitions"}}},"docs":{"tags":[],"text":""},"internal":false},{"name":"srcUrl","type":"string","attribute":"src-url","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"''","complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"currentPageUrl","type":"string","attribute":"current-page-url","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"''","complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"itemOffsets"},{"name":"selectedId"}],"methods":[],"listeners":[{"name":"scroll","method":"function","capture":false,"passive":true,"target":"window"},{"name":"resize","method":"updateItemOffsets","capture":false,"passive":true,"target":"window"}],"events":[],"watchers":[{"propName":"pageLinks","methodName":"updateItemOffsets"}],"styles":[{"modeName":"$","styleId":"IN-PAGE-NAVIGATION","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/in-page-navigation/in-page-navigation.css","relativePath":"in-page-navigation.css","originalComponentPath":"in-page-navigation.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/in-page-navigation/in-page-navigation.js","sourceFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/in-page-navigation/in-page-navigation.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":true,"hasListenerTarget":true,"hasListenerTargetWindow":true,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":true,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":true,"isPlain":false,"htmlAttrNames":["class","href","name","url"],"htmlTagNames":["span","a","app-icon","div","h5","ul","li","stencil-route-link"],"isUpdateable":true,"potentialCmpRefs":["app-icon","stencil-route-link"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nexport class InPageNavigtion {\r\n    constructor() {\r\n        this.pageLinks = [];\r\n        this.srcUrl = '';\r\n        this.currentPageUrl = '';\r\n        this.itemOffsets = [];\r\n    }\r\n    function() {\r\n        const itemIndex = this.itemOffsets.findIndex(item => item.topOffset > window.scrollY);\r\n        if (itemIndex === 0) {\r\n            this.selectedId = undefined;\r\n        }\r\n        else if (itemIndex === -1) {\r\n            this.selectedId = this.itemOffsets[this.itemOffsets.length - 1].id;\r\n        }\r\n        else {\r\n            this.selectedId = this.itemOffsets[itemIndex - 1].id;\r\n        }\r\n    }\r\n    updateItemOffsets() {\r\n        requestAnimationFrame(() => {\r\n            this.itemOffsets = this.pageLinks.map((pl) => {\r\n                const item = document.getElementById(pl.id);\r\n                return {\r\n                    id: pl.id,\r\n                    topOffset: item.getBoundingClientRect().top + window.scrollY\r\n                };\r\n            });\r\n        });\r\n    }\r\n    componentDidLoad() {\r\n        this.updateItemOffsets();\r\n    }\r\n    cleanHeader(str) {\r\n        // The Markdown headers can contain HTML escaped characters such as \"&#39;\" (')\r\n        // or especially on the Host Element page \"&lt;\"/\"&gt;\"\r\n        // This is a hack to evaluate those as DOM elements and extract the text out.\r\n        const headerEl = document.createElement('span');\r\n        headerEl.innerHTML = str;\r\n        return headerEl.innerText;\r\n    }\r\n    render() {\r\n        const pageLinks = this.pageLinks.filter(pl => pl.level !== 1);\r\n        const submitEditLink = (h(\"a\", { class: \"submit-edit-link\", href: `https://github.com/ionic-team/stencil-site/edit/master/${this.srcUrl}` },\r\n            h(\"app-icon\", { name: \"github\" }),\r\n            h(\"span\", null, \"Submit an edit\")));\r\n        if (pageLinks.length === 0) {\r\n            return (h(\"div\", null, submitEditLink));\r\n        }\r\n        return (h(\"div\", null,\r\n            h(\"h5\", null, \"Contents\"),\r\n            h(\"ul\", { class: \"heading-links\" }, pageLinks.map(pl => (h(\"li\", { class: {\r\n                    'heading-link': true,\r\n                    [`size-h${pl.level}`]: true,\r\n                    'selected': this.selectedId === pl.id\r\n                } },\r\n                h(\"stencil-route-link\", { url: `${this.currentPageUrl}#${pl.id}` }, this.cleanHeader(pl.text)))))),\r\n            submitEditLink));\r\n    }\r\n    static get is() { return \"in-page-navigation\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"in-page-navigation.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"in-page-navigation.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"pageLinks\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"MarkdownHeading[]\",\r\n                \"resolved\": \"MarkdownHeading[]\",\r\n                \"references\": {\r\n                    \"MarkdownHeading\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/definitions\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"[]\"\r\n        },\r\n        \"srcUrl\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"src-url\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"''\"\r\n        },\r\n        \"currentPageUrl\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"current-page-url\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"''\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"itemOffsets\": {},\r\n        \"selectedId\": {}\r\n    }; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"pageLinks\",\r\n            \"methodName\": \"updateItemOffsets\"\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"scroll\",\r\n            \"method\": \"function\",\r\n            \"target\": \"window\",\r\n            \"capture\": false,\r\n            \"passive\": true\r\n        }, {\r\n            \"name\": \"resize\",\r\n            \"method\": \"updateItemOffsets\",\r\n            \"target\": \"window\",\r\n            \"capture\": false,\r\n            \"passive\": true\r\n        }]; }\r\n}\r\n"}