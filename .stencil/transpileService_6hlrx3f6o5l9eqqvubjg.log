{"moduleFile":{"sourceFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/doc-component/doc-component.tsx","jsFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/doc-component/doc-component.js","cmps":[{"isLegacy":false,"tagName":"doc-component","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"DocumentComponent","elementRef":null,"encapsulation":"none","properties":[{"name":"page","type":"string","attribute":"page","reflect":false,"mutable":false,"required":false,"optional":true,"complexType":{"original":"string","resolved":"string | undefined","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"DOC-COMPONENT","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/doc-component/doc-component.css","relativePath":"doc-component.css","originalComponentPath":"doc-component.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/doc-component/doc-component.js","sourceFilePath":"/Users/fernandofuentes/github/stenciljs-template/src/components/doc-component/doc-component.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":true,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":true,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","pageTitle","selectedParent","siteStructureList","next","prev","contributors","pageLinks","srcUrl","currentPageUrl"],"htmlTagNames":["div","stencil-route-title","app-burger","site-menu","lower-content-nav","contributor-list","in-page-navigation"],"isUpdateable":true,"potentialCmpRefs":["stencil-route-title","app-burger","site-menu","lower-content-nav","contributor-list","in-page-navigation"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/fernandofuentes/github/stenciljs-template/src/assets/docs-structure.json","/Users/fernandofuentes/github/stenciljs-template/src/global/site-structure-utils"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../assets/docs-structure.json","../../global/site-structure-utils"],"potentialCmpRefs":[]},"jsText":"import { Host, h, Build } from \"@stencil/core\";\r\nimport siteStructure from '../../assets/docs-structure.json';\r\nimport { findItem, fileNotFound } from '../../global/site-structure-utils';\r\nexport class DocumentComponent {\r\n    async componentWillRender() {\r\n        if (this.page) {\r\n            console.log('componentWillRender', this.page);\r\n            const data = this.data = findItem(siteStructure, this.page);\r\n            if (!Build.isBrowser && !data.item) {\r\n                fileNotFound();\r\n                return;\r\n            }\r\n            if (data.item && data.item.filePath) {\r\n                this.content = await fetchContent(data.item.filePath);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const data = this.data;\r\n        const content = this.content;\r\n        if (!data || !content) {\r\n            return null;\r\n        }\r\n        console.log('render3', this.page);\r\n        return (h(Host, null,\r\n            h(\"div\", { class: \"container\" },\r\n                h(\"div\", { class: \"container-inner\" },\r\n                    h(\"stencil-route-title\", { pageTitle: content.title }),\r\n                    h(\"app-burger\", null),\r\n                    h(\"site-menu\", { selectedParent: data.parent, siteStructureList: siteStructure }),\r\n                    h(\"div\", { class: \"doc-content measure-lg\" },\r\n                        toHypertext(content.hypertext),\r\n                        h(\"lower-content-nav\", { next: data.nextItem, prev: data.prevItem }),\r\n                        h(\"contributor-list\", { contributors: content.contributors })),\r\n                    h(\"in-page-navigation\", { pageLinks: content.headings, srcUrl: content.srcPath, currentPageUrl: content.url })))));\r\n    }\r\n    static get is() { return \"doc-component\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"doc-component.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"doc-component.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"page\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"page\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n}\r\nconst localCache = new Map();\r\nconst fetchContent = (path) => {\r\n    let promise = localCache.get(path);\r\n    if (!promise) {\r\n        console.log('fetchContent', path);\r\n        promise = fetch(path).then(response => response.json());\r\n        localCache.set(path, promise);\r\n    }\r\n    return promise;\r\n};\r\nconst toHypertext = (data) => {\r\n    if (!Array.isArray(data)) {\r\n        console.error('content error, hypertext is undefined');\r\n        return null;\r\n    }\r\n    const args = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        let arg = data[i];\r\n        if (i === 0 && typeof arg === 'string' && tagBlacklist.includes(arg.toLowerCase().trim())) {\r\n            arg = 'template';\r\n        }\r\n        else if (i === 1 && arg) {\r\n            const attrs = {};\r\n            Object.keys(arg).forEach(key => {\r\n                const k = key.toLowerCase();\r\n                if (!k.startsWith('on') && k !== 'innerhtml') {\r\n                    attrs[key] = arg[key];\r\n                }\r\n            });\r\n            arg = attrs;\r\n        }\r\n        else if (i > 1) {\r\n            if (Array.isArray(arg)) {\r\n                arg = toHypertext(arg);\r\n            }\r\n        }\r\n        args.push(arg);\r\n    }\r\n    return h.apply(null, args);\r\n};\r\nconst tagBlacklist = ['script', 'link', 'meta', 'object', 'head', 'html', 'body'];\r\n"}