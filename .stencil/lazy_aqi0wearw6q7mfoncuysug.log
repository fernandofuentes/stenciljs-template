import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from "@stencil/core";
export const InPageNavigtion = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.pageLinks = [];
        this.srcUrl = '';
        this.currentPageUrl = '';
        this.itemOffsets = [];
    }
    function() {
        const itemIndex = this.itemOffsets.findIndex(item => item.topOffset > window.scrollY);
        if (itemIndex === 0) {
            this.selectedId = undefined;
        }
        else if (itemIndex === -1) {
            this.selectedId = this.itemOffsets[this.itemOffsets.length - 1].id;
        }
        else {
            this.selectedId = this.itemOffsets[itemIndex - 1].id;
        }
    }
    updateItemOffsets() {
        requestAnimationFrame(() => {
            this.itemOffsets = this.pageLinks.map((pl) => {
                const item = document.getElementById(pl.id);
                return {
                    id: pl.id,
                    topOffset: item.getBoundingClientRect().top + window.scrollY
                };
            });
        });
    }
    componentDidLoad() {
        this.updateItemOffsets();
    }
    cleanHeader(str) {
        // The Markdown headers can contain HTML escaped characters such as "&#39;" (')
        // or especially on the Host Element page "&lt;"/"&gt;"
        // This is a hack to evaluate those as DOM elements and extract the text out.
        const headerEl = document.createElement('span');
        headerEl.innerHTML = str;
        return headerEl.innerText;
    }
    render() {
        const pageLinks = this.pageLinks.filter(pl => pl.level !== 1);
        const submitEditLink = (h("a", { class: "submit-edit-link", href: `https://github.com/ionic-team/stencil-site/edit/master/${this.srcUrl}` }, h("app-icon", { name: "github" }), h("span", null, "Submit an edit")));
        if (pageLinks.length === 0) {
            return (h("div", null, submitEditLink));
        }
        return (h("div", null, h("h5", null, "Contents"), h("ul", { class: "heading-links" }, pageLinks.map(pl => (h("li", { class: {
                'heading-link': true,
                [`size-h${pl.level}`]: true,
                'selected': this.selectedId === pl.id
            } }, h("stencil-route-link", { url: `${this.currentPageUrl}#${pl.id}` }, this.cleanHeader(pl.text)))))), submitEditLink));
    }
    static get watchers() { return {
        "pageLinks": ["updateItemOffsets"]
    }; }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:in-page-navigation"; }
};
